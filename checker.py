import matplotlib.pyplot as plt
import numpy as np


def plot_pts(pts_raw):
    pts = np.array(pts_raw).T
    plt.scatter(pts[1], pts[2])

    plt.xlim((0, 91.9))
    plt.ylim((0, 60.5))

    for pt in pts_raw:
        s = pt[0]
        x = pt[1]
        y = pt[2]

        plt.text(x, y, s)

    plt.axis('equal')
    plt.show()


def plot_lengths(centers, radiuses):
    fig, ax = plt.subplots()
    # fig.set_size((92, 61))
    fig.set_figwidth(92)
    fig.set_figheight(62)

    ax.axis('equal')
    ax.set_xlim((0, 91.9))
    ax.set_ylim((0, 60.5))
    idx = 0
    colors = ['r', 'g', 'b', 'm', 'y']

    for (r0, r1) in radiuses:
        c0 = plt.Circle(centers[0], r0, alpha=0.1, color=colors[idx], fill=False)
        c1 = plt.Circle(centers[1], r1, alpha=0.1, color=colors[idx], fill=False)
        ax.add_artist(c0)
        ax.add_artist(c1)
        idx += 1
        idx = idx % len(colors)

    plt.xlim((0, 91.9))
    plt.ylim((0, 60.5))
    plt.show()


def test_pts(centers, inputs):
    cs = np.array(centers)
    inputs = np.array(inputs)

    degs = inputs[:, 0]
    pts = inputs[:, 1:3]
    l0s = inputs[:, 3]
    l1s = inputs[:, 4]

    l0comp = np.linalg.norm(pts - cs[0], axis=1)
    l1comp = np.linalg.norm(pts - cs[1], axis=1)

    d0 = np.abs(l0comp - l0s)
    d1 = np.abs(l1comp - l1s)

    assert np.max(d0) < 0.01
    assert np.max(d1) < 0.01


centers = [
    (0.0, 60.5),
    (91.9, 60.5)
]

lines_data = [
    (47.44, 48.80),
    (40.54, 51.79),
    (36.87, 55.05),
    (33.08, 58.88),
    (24.84, 67.64),
    (16.03, 76.54),
    (11.55, 80.75),
    (7.23, 84.71),
    (4.16, 88.53),
    (6.40, 92.02),
    (10.83, 94.64),
    (15.63, 96.66),
    (20.45, 98.02),
    (25.24, 98.70),
    (30.02, 98.63),
    (34.46, 97.76),
    (38.54, 96.12),
    (42.20, 93.76),
    (45.41, 90.72),
    (48.13, 87.11),
    (50.34, 83.03),
    (52.05, 78.54),
    (53.94, 68.77),
    (54.09, 63.76),
    (53.67, 58.93),
    (52.67, 54.63),
    (51.01, 51.17),
    (48.62, 49.10)
]

# plot_lengths(centers, lines_data)

pts_data = [
    (0.00, 45.95, 40.30, 50.19, 50.19),
    (14.08, 45.20, 46.38, 47.35, 48.79),
    (27.94, 43.04, 52.01, 43.87, 49.59),
    (40.21, 40.04, 56.44, 40.25, 52.02),
    (51.55, 36.50, 59.88, 36.50, 55.41),
    (62.39, 32.54, 62.45, 32.60, 59.40),
    (73.13, 28.21, 64.22, 28.45, 63.80),
    (83.75, 23.67, 65.15, 24.13, 68.39),
    (94.18, 19.13, 65.23, 19.71, 72.92),
    (104.78, 14.57, 64.47, 15.10, 77.43),
    (115.34, 10.25, 62.89, 10.52, 81.69),
    (126.08, 6.23, 60.50, 6.23, 85.67),
    (138.18, 2.32, 56.97, 4.22, 89.65),
    (149.86, -0.67, 52.85, 7.67, 92.88),
    (161.05, -2.70, 48.42, 12.38, 95.36),
    (172.42, -3.83, 43.60, 17.33, 97.21),
    (183.86, -3.99, 38.62, 22.25, 98.36),
    (195.79, -3.11, 33.50, 27.18, 98.77),
    (208.00, -1.12, 28.56, 31.96, 98.35),
    (220.08, 1.82, 24.20, 36.34, 97.12),
    (232.15, 5.61, 20.56, 40.33, 95.08),
    (244.15, 10.05, 17.80, 43.87, 92.32),
    (256.03, 14.92, 16.04, 46.90, 88.90),
    (267.83, 20.00, 15.32, 49.41, 84.92),
    (279.48, 25.07, 15.64, 51.39, 80.49),
    (291.12, 29.96, 16.98, 52.83, 75.70),
    (302.78, 34.49, 19.28, 53.74, 70.68),
    (314.62, 38.51, 22.50, 54.10, 65.53),
    (326.65, 41.83, 26.56, 53.87, 60.49),
    (338.89, 44.27, 31.30, 53.04, 55.87),
    (351.52, 45.68, 36.61, 51.55, 52.03),
    (364.91, 45.86, 42.44, 49.29, 49.46),
]


# plot_pts(pts_data)
test_pts(centers, pts_data)